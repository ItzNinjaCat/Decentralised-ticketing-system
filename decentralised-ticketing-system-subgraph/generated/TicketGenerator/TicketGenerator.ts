// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptBuyOffer extends ethereum.Event {
  get params(): AcceptBuyOffer__Params {
    return new AcceptBuyOffer__Params(this);
  }
}

export class AcceptBuyOffer__Params {
  _event: AcceptBuyOffer;

  constructor(event: AcceptBuyOffer) {
    this._event = event;
  }

  get offerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get ticketId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tokenURI(): string {
    return this._event.parameters[6].value.toString();
  }

  get price(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class AcceptSellOffer extends ethereum.Event {
  get params(): AcceptSellOffer__Params {
    return new AcceptSellOffer__Params(this);
  }
}

export class AcceptSellOffer__Params {
  _event: AcceptSellOffer;

  constructor(event: AcceptSellOffer) {
    this._event = event;
  }

  get offerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get ticketId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tokenURI(): string {
    return this._event.parameters[6].value.toString();
  }

  get price(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BuyTicket extends ethereum.Event {
  get params(): BuyTicket__Params {
    return new BuyTicket__Params(this);
  }
}

export class BuyTicket__Params {
  _event: BuyTicket;

  constructor(event: BuyTicket) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tokenURI(): string {
    return this._event.parameters[5].value.toString();
  }

  get eventStartTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class CancelOffer extends ethereum.Event {
  get params(): CancelOffer__Params {
    return new CancelOffer__Params(this);
  }
}

export class CancelOffer__Params {
  _event: CancelOffer;

  constructor(event: CancelOffer) {
    this._event = event;
  }

  get offerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CreateBuyOffer extends ethereum.Event {
  get params(): CreateBuyOffer__Params {
    return new CreateBuyOffer__Params(this);
  }
}

export class CreateBuyOffer__Params {
  _event: CreateBuyOffer;

  constructor(event: CreateBuyOffer) {
    this._event = event;
  }

  get offerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CreateEvent extends ethereum.Event {
  get params(): CreateEvent__Params {
    return new CreateEvent__Params(this);
  }
}

export class CreateEvent__Params {
  _event: CreateEvent;

  constructor(event: CreateEvent) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get eventStorage(): string {
    return this._event.parameters[4].value.toString();
  }

  get startTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class CreateSellOffer extends ethereum.Event {
  get params(): CreateSellOffer__Params {
    return new CreateSellOffer__Params(this);
  }
}

export class CreateSellOffer__Params {
  _event: CreateSellOffer;

  constructor(event: CreateSellOffer) {
    this._event = event;
  }

  get offerId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get ticketId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CreateTicketType extends ethereum.Event {
  get params(): CreateTicketType__Params {
    return new CreateTicketType__Params(this);
  }
}

export class CreateTicketType__Params {
  _event: CreateTicketType;

  constructor(event: CreateTicketType) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get ticketType(): CreateTicketTypeTicketTypeStruct {
    return changetype<CreateTicketTypeTicketTypeStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class CreateTicketTypeTicketTypeStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get maxSupply(): BigInt {
    return this[3].toBigInt();
  }

  get currentSupply(): BigInt {
    return this[4].toBigInt();
  }

  get tokenURI(): string {
    return this[5].toString();
  }

  get souvenirTokenURI(): string {
    return this[6].toString();
  }
}

export class DeleteEvent extends ethereum.Event {
  get params(): DeleteEvent__Params {
    return new DeleteEvent__Params(this);
  }
}

export class DeleteEvent__Params {
  _event: DeleteEvent;

  constructor(event: DeleteEvent) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class DeleteTickeyType extends ethereum.Event {
  get params(): DeleteTickeyType__Params {
    return new DeleteTickeyType__Params(this);
  }
}

export class DeleteTickeyType__Params {
  _event: DeleteTickeyType;

  constructor(event: DeleteTickeyType) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GenerateTicket extends ethereum.Event {
  get params(): GenerateTicket__Params {
    return new GenerateTicket__Params(this);
  }
}

export class GenerateTicket__Params {
  _event: GenerateTicket;

  constructor(event: GenerateTicket) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenURI(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TransferTicket extends ethereum.Event {
  get params(): TransferTicket__Params {
    return new TransferTicket__Params(this);
  }
}

export class TransferTicket__Params {
  _event: TransferTicket;

  constructor(event: TransferTicket) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdateEvent extends ethereum.Event {
  get params(): UpdateEvent__Params {
    return new UpdateEvent__Params(this);
  }
}

export class UpdateEvent__Params {
  _event: UpdateEvent;

  constructor(event: UpdateEvent) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get eventStorage(): string {
    return this._event.parameters[4].value.toString();
  }

  get startTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class UpdateTicketType extends ethereum.Event {
  get params(): UpdateTicketType__Params {
    return new UpdateTicketType__Params(this);
  }
}

export class UpdateTicketType__Params {
  _event: UpdateTicketType;

  constructor(event: UpdateTicketType) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get ticketType(): UpdateTicketTypeTicketTypeStruct {
    return changetype<UpdateTicketTypeTicketTypeStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class UpdateTicketTypeTicketTypeStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get maxSupply(): BigInt {
    return this[3].toBigInt();
  }

  get currentSupply(): BigInt {
    return this[4].toBigInt();
  }

  get tokenURI(): string {
    return this[5].toString();
  }

  get souvenirTokenURI(): string {
    return this[6].toString();
  }
}

export class UseTicket extends ethereum.Event {
  get params(): UseTicket__Params {
    return new UseTicket__Params(this);
  }
}

export class UseTicket__Params {
  _event: UseTicket;

  constructor(event: UseTicket) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TicketGenerator__getEventResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: BigInt;
  value6: Array<Bytes>;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: BigInt,
    value6: Array<Bytes>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromFixedBytesArray(this.value6));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): string {
    return this.value2;
  }

  getValue3(): string {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): Array<Bytes> {
    return this.value6;
  }
}

export class TicketGenerator__getOfferResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get eventId(): Bytes {
    return this[1].toBytes();
  }

  get ticketTypeId(): Bytes {
    return this[2].toBytes();
  }

  get ticketId(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get seller(): Address {
    return this[5].toAddress();
  }

  get buyer(): Address {
    return this[6].toAddress();
  }

  get accepted(): boolean {
    return this[7].toBoolean();
  }

  get deadline(): BigInt {
    return this[8].toBigInt();
  }

  get buyOffer(): boolean {
    return this[9].toBoolean();
  }

  get sellOffer(): boolean {
    return this[10].toBoolean();
  }
}

export class TicketGenerator__getTicketResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get eventId(): Bytes {
    return this[1].toBytes();
  }

  get ticketTypeId(): Bytes {
    return this[2].toBytes();
  }

  get souvenirId(): BigInt {
    return this[3].toBigInt();
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get souvenirMinted(): boolean {
    return this[5].toBoolean();
  }

  get usable(): boolean {
    return this[6].toBoolean();
  }
}

export class TicketGenerator__getTicketTypeResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get maxSupply(): BigInt {
    return this[3].toBigInt();
  }

  get currentSupply(): BigInt {
    return this[4].toBigInt();
  }

  get tokenURI(): string {
    return this[5].toString();
  }

  get souvenirTokenURI(): string {
    return this[6].toString();
  }
}

export class TicketGenerator extends ethereum.SmartContract {
  static bind(address: Address): TicketGenerator {
    return new TicketGenerator("TicketGenerator", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ORGANIZER_ROLE(): Bytes {
    let result = super.call("ORGANIZER_ROLE", "ORGANIZER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ORGANIZER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ORGANIZER_ROLE",
      "ORGANIZER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyTicket(
    _eventId: Bytes,
    _ticketTypeId: Bytes,
    _recipient: Address
  ): BigInt {
    let result = super.call(
      "buyTicket",
      "buyTicket(bytes32,bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_eventId),
        ethereum.Value.fromFixedBytes(_ticketTypeId),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toBigInt();
  }

  try_buyTicket(
    _eventId: Bytes,
    _ticketTypeId: Bytes,
    _recipient: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyTicket",
      "buyTicket(bytes32,bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_eventId),
        ethereum.Value.fromFixedBytes(_ticketTypeId),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getEvent(_eventId: Bytes): TicketGenerator__getEventResult {
    let result = super.call(
      "getEvent",
      "getEvent(bytes32):(address,string,string,string,uint256,uint256,bytes32[])",
      [ethereum.Value.fromFixedBytes(_eventId)]
    );

    return new TicketGenerator__getEventResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBytesArray()
    );
  }

  try_getEvent(
    _eventId: Bytes
  ): ethereum.CallResult<TicketGenerator__getEventResult> {
    let result = super.tryCall(
      "getEvent",
      "getEvent(bytes32):(address,string,string,string,uint256,uint256,bytes32[])",
      [ethereum.Value.fromFixedBytes(_eventId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TicketGenerator__getEventResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBytesArray()
      )
    );
  }

  getMetadata(_tokenId: BigInt): string {
    let result = super.call("getMetadata", "getMetadata(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_getMetadata(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getMetadata", "getMetadata(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOffer(id: Bytes): TicketGenerator__getOfferResultValue0Struct {
    let result = super.call(
      "getOffer",
      "getOffer(bytes32):((bytes32,bytes32,bytes32,uint256,uint256,address,address,bool,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return changetype<TicketGenerator__getOfferResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOffer(
    id: Bytes
  ): ethereum.CallResult<TicketGenerator__getOfferResultValue0Struct> {
    let result = super.tryCall(
      "getOffer",
      "getOffer(bytes32):((bytes32,bytes32,bytes32,uint256,uint256,address,address,bool,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TicketGenerator__getOfferResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSouvenir(_ticketId: BigInt): BigInt {
    let result = super.call("getSouvenir", "getSouvenir(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_ticketId)
    ]);

    return result[0].toBigInt();
  }

  try_getSouvenir(_ticketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSouvenir",
      "getSouvenir(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_ticketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTicket(_ticketId: BigInt): TicketGenerator__getTicketResultValue0Struct {
    let result = super.call(
      "getTicket",
      "getTicket(uint256):((uint256,bytes32,bytes32,uint256,address,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_ticketId)]
    );

    return changetype<TicketGenerator__getTicketResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getTicket(
    _ticketId: BigInt
  ): ethereum.CallResult<TicketGenerator__getTicketResultValue0Struct> {
    let result = super.tryCall(
      "getTicket",
      "getTicket(uint256):((uint256,bytes32,bytes32,uint256,address,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_ticketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TicketGenerator__getTicketResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getTicketType(
    _eventId: Bytes,
    _ticketTypeId: Bytes
  ): TicketGenerator__getTicketTypeResultValue0Struct {
    let result = super.call(
      "getTicketType",
      "getTicketType(bytes32,bytes32):((bytes32,string,uint256,uint256,uint256,string,string))",
      [
        ethereum.Value.fromFixedBytes(_eventId),
        ethereum.Value.fromFixedBytes(_ticketTypeId)
      ]
    );

    return changetype<TicketGenerator__getTicketTypeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getTicketType(
    _eventId: Bytes,
    _ticketTypeId: Bytes
  ): ethereum.CallResult<TicketGenerator__getTicketTypeResultValue0Struct> {
    let result = super.tryCall(
      "getTicketType",
      "getTicketType(bytes32,bytes32):((bytes32,string,uint256,uint256,uint256,string,string))",
      [
        ethereum.Value.fromFixedBytes(_eventId),
        ethereum.Value.fromFixedBytes(_ticketTypeId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TicketGenerator__getTicketTypeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _souvenirGeneratorAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBuyOfferCall extends ethereum.Call {
  get inputs(): AcceptBuyOfferCall__Inputs {
    return new AcceptBuyOfferCall__Inputs(this);
  }

  get outputs(): AcceptBuyOfferCall__Outputs {
    return new AcceptBuyOfferCall__Outputs(this);
  }
}

export class AcceptBuyOfferCall__Inputs {
  _call: AcceptBuyOfferCall;

  constructor(call: AcceptBuyOfferCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AcceptBuyOfferCall__Outputs {
  _call: AcceptBuyOfferCall;

  constructor(call: AcceptBuyOfferCall) {
    this._call = call;
  }
}

export class AcceptSellOfferCall extends ethereum.Call {
  get inputs(): AcceptSellOfferCall__Inputs {
    return new AcceptSellOfferCall__Inputs(this);
  }

  get outputs(): AcceptSellOfferCall__Outputs {
    return new AcceptSellOfferCall__Outputs(this);
  }
}

export class AcceptSellOfferCall__Inputs {
  _call: AcceptSellOfferCall;

  constructor(call: AcceptSellOfferCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AcceptSellOfferCall__Outputs {
  _call: AcceptSellOfferCall;

  constructor(call: AcceptSellOfferCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BecomeOrganizerCall extends ethereum.Call {
  get inputs(): BecomeOrganizerCall__Inputs {
    return new BecomeOrganizerCall__Inputs(this);
  }

  get outputs(): BecomeOrganizerCall__Outputs {
    return new BecomeOrganizerCall__Outputs(this);
  }
}

export class BecomeOrganizerCall__Inputs {
  _call: BecomeOrganizerCall;

  constructor(call: BecomeOrganizerCall) {
    this._call = call;
  }
}

export class BecomeOrganizerCall__Outputs {
  _call: BecomeOrganizerCall;

  constructor(call: BecomeOrganizerCall) {
    this._call = call;
  }
}

export class BuyTicketCall extends ethereum.Call {
  get inputs(): BuyTicketCall__Inputs {
    return new BuyTicketCall__Inputs(this);
  }

  get outputs(): BuyTicketCall__Outputs {
    return new BuyTicketCall__Outputs(this);
  }
}

export class BuyTicketCall__Inputs {
  _call: BuyTicketCall;

  constructor(call: BuyTicketCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ticketTypeId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BuyTicketCall__Outputs {
  _call: BuyTicketCall;

  constructor(call: BuyTicketCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CreateBuyOfferCall extends ethereum.Call {
  get inputs(): CreateBuyOfferCall__Inputs {
    return new CreateBuyOfferCall__Inputs(this);
  }

  get outputs(): CreateBuyOfferCall__Outputs {
    return new CreateBuyOfferCall__Outputs(this);
  }
}

export class CreateBuyOfferCall__Inputs {
  _call: CreateBuyOfferCall;

  constructor(call: CreateBuyOfferCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get eventId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class CreateBuyOfferCall__Outputs {
  _call: CreateBuyOfferCall;

  constructor(call: CreateBuyOfferCall) {
    this._call = call;
  }
}

export class CreateEventCall extends ethereum.Call {
  get inputs(): CreateEventCall__Inputs {
    return new CreateEventCall__Inputs(this);
  }

  get outputs(): CreateEventCall__Outputs {
    return new CreateEventCall__Outputs(this);
  }
}

export class CreateEventCall__Inputs {
  _call: CreateEventCall;

  constructor(call: CreateEventCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get eventStorage(): string {
    return this._call.inputValues[3].value.toString();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateEventCall__Outputs {
  _call: CreateEventCall;

  constructor(call: CreateEventCall) {
    this._call = call;
  }
}

export class CreateSellOfferCall extends ethereum.Call {
  get inputs(): CreateSellOfferCall__Inputs {
    return new CreateSellOfferCall__Inputs(this);
  }

  get outputs(): CreateSellOfferCall__Outputs {
    return new CreateSellOfferCall__Outputs(this);
  }
}

export class CreateSellOfferCall__Inputs {
  _call: CreateSellOfferCall;

  constructor(call: CreateSellOfferCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get eventId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get ticketTypeId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get ticketId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateSellOfferCall__Outputs {
  _call: CreateSellOfferCall;

  constructor(call: CreateSellOfferCall) {
    this._call = call;
  }
}

export class CreateTicketTypeCall extends ethereum.Call {
  get inputs(): CreateTicketTypeCall__Inputs {
    return new CreateTicketTypeCall__Inputs(this);
  }

  get outputs(): CreateTicketTypeCall__Outputs {
    return new CreateTicketTypeCall__Outputs(this);
  }
}

export class CreateTicketTypeCall__Inputs {
  _call: CreateTicketTypeCall;

  constructor(call: CreateTicketTypeCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ticketTypeId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _ticketName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tokenURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _souvenirTokenURI(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _maxSupply(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateTicketTypeCall__Outputs {
  _call: CreateTicketTypeCall;

  constructor(call: CreateTicketTypeCall) {
    this._call = call;
  }
}

export class DeleteEventCall extends ethereum.Call {
  get inputs(): DeleteEventCall__Inputs {
    return new DeleteEventCall__Inputs(this);
  }

  get outputs(): DeleteEventCall__Outputs {
    return new DeleteEventCall__Outputs(this);
  }
}

export class DeleteEventCall__Inputs {
  _call: DeleteEventCall;

  constructor(call: DeleteEventCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteEventCall__Outputs {
  _call: DeleteEventCall;

  constructor(call: DeleteEventCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class GetSouvenirCall extends ethereum.Call {
  get inputs(): GetSouvenirCall__Inputs {
    return new GetSouvenirCall__Inputs(this);
  }

  get outputs(): GetSouvenirCall__Outputs {
    return new GetSouvenirCall__Outputs(this);
  }
}

export class GetSouvenirCall__Inputs {
  _call: GetSouvenirCall;

  constructor(call: GetSouvenirCall) {
    this._call = call;
  }

  get _ticketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GetSouvenirCall__Outputs {
  _call: GetSouvenirCall;

  constructor(call: GetSouvenirCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class OwnerWithdrawCall extends ethereum.Call {
  get inputs(): OwnerWithdrawCall__Inputs {
    return new OwnerWithdrawCall__Inputs(this);
  }

  get outputs(): OwnerWithdrawCall__Outputs {
    return new OwnerWithdrawCall__Outputs(this);
  }
}

export class OwnerWithdrawCall__Inputs {
  _call: OwnerWithdrawCall;

  constructor(call: OwnerWithdrawCall) {
    this._call = call;
  }
}

export class OwnerWithdrawCall__Outputs {
  _call: OwnerWithdrawCall;

  constructor(call: OwnerWithdrawCall) {
    this._call = call;
  }
}

export class RemoveTicketTypeCall extends ethereum.Call {
  get inputs(): RemoveTicketTypeCall__Inputs {
    return new RemoveTicketTypeCall__Inputs(this);
  }

  get outputs(): RemoveTicketTypeCall__Outputs {
    return new RemoveTicketTypeCall__Outputs(this);
  }
}

export class RemoveTicketTypeCall__Inputs {
  _call: RemoveTicketTypeCall;

  constructor(call: RemoveTicketTypeCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ticketTypeId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RemoveTicketTypeCall__Outputs {
  _call: RemoveTicketTypeCall;

  constructor(call: RemoveTicketTypeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetOrganizerDepositCall extends ethereum.Call {
  get inputs(): SetOrganizerDepositCall__Inputs {
    return new SetOrganizerDepositCall__Inputs(this);
  }

  get outputs(): SetOrganizerDepositCall__Outputs {
    return new SetOrganizerDepositCall__Outputs(this);
  }
}

export class SetOrganizerDepositCall__Inputs {
  _call: SetOrganizerDepositCall;

  constructor(call: SetOrganizerDepositCall) {
    this._call = call;
  }

  get _organizerDeposit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOrganizerDepositCall__Outputs {
  _call: SetOrganizerDepositCall;

  constructor(call: SetOrganizerDepositCall) {
    this._call = call;
  }
}

export class SetSouvenirGeneratorContractCall extends ethereum.Call {
  get inputs(): SetSouvenirGeneratorContractCall__Inputs {
    return new SetSouvenirGeneratorContractCall__Inputs(this);
  }

  get outputs(): SetSouvenirGeneratorContractCall__Outputs {
    return new SetSouvenirGeneratorContractCall__Outputs(this);
  }
}

export class SetSouvenirGeneratorContractCall__Inputs {
  _call: SetSouvenirGeneratorContractCall;

  constructor(call: SetSouvenirGeneratorContractCall) {
    this._call = call;
  }

  get _souvenirGeneratorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSouvenirGeneratorContractCall__Outputs {
  _call: SetSouvenirGeneratorContractCall;

  constructor(call: SetSouvenirGeneratorContractCall) {
    this._call = call;
  }
}

export class SetTIKContractCall extends ethereum.Call {
  get inputs(): SetTIKContractCall__Inputs {
    return new SetTIKContractCall__Inputs(this);
  }

  get outputs(): SetTIKContractCall__Outputs {
    return new SetTIKContractCall__Outputs(this);
  }
}

export class SetTIKContractCall__Inputs {
  _call: SetTIKContractCall;

  constructor(call: SetTIKContractCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTIKContractCall__Outputs {
  _call: SetTIKContractCall;

  constructor(call: SetTIKContractCall) {
    this._call = call;
  }
}

export class TicketPurchasePermitCall extends ethereum.Call {
  get inputs(): TicketPurchasePermitCall__Inputs {
    return new TicketPurchasePermitCall__Inputs(this);
  }

  get outputs(): TicketPurchasePermitCall__Outputs {
    return new TicketPurchasePermitCall__Outputs(this);
  }
}

export class TicketPurchasePermitCall__Inputs {
  _call: TicketPurchasePermitCall;

  constructor(call: TicketPurchasePermitCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class TicketPurchasePermitCall__Outputs {
  _call: TicketPurchasePermitCall;

  constructor(call: TicketPurchasePermitCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UpdateEventCall extends ethereum.Call {
  get inputs(): UpdateEventCall__Inputs {
    return new UpdateEventCall__Inputs(this);
  }

  get outputs(): UpdateEventCall__Outputs {
    return new UpdateEventCall__Outputs(this);
  }
}

export class UpdateEventCall__Inputs {
  _call: UpdateEventCall;

  constructor(call: UpdateEventCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get eventStorage(): string {
    return this._call.inputValues[3].value.toString();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class UpdateEventCall__Outputs {
  _call: UpdateEventCall;

  constructor(call: UpdateEventCall) {
    this._call = call;
  }
}

export class UpdateTicketTypeCall extends ethereum.Call {
  get inputs(): UpdateTicketTypeCall__Inputs {
    return new UpdateTicketTypeCall__Inputs(this);
  }

  get outputs(): UpdateTicketTypeCall__Outputs {
    return new UpdateTicketTypeCall__Outputs(this);
  }
}

export class UpdateTicketTypeCall__Inputs {
  _call: UpdateTicketTypeCall;

  constructor(call: UpdateTicketTypeCall) {
    this._call = call;
  }

  get _eventId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ticketTypeId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _ticketName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tokenURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _souvenirTokenURI(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _maxSupply(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class UpdateTicketTypeCall__Outputs {
  _call: UpdateTicketTypeCall;

  constructor(call: UpdateTicketTypeCall) {
    this._call = call;
  }
}

export class UseTicketCall extends ethereum.Call {
  get inputs(): UseTicketCall__Inputs {
    return new UseTicketCall__Inputs(this);
  }

  get outputs(): UseTicketCall__Outputs {
    return new UseTicketCall__Outputs(this);
  }
}

export class UseTicketCall__Inputs {
  _call: UseTicketCall;

  constructor(call: UseTicketCall) {
    this._call = call;
  }

  get _ticketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UseTicketCall__Outputs {
  _call: UseTicketCall;

  constructor(call: UseTicketCall) {
    this._call = call;
  }
}

export class UserWithdrawCall extends ethereum.Call {
  get inputs(): UserWithdrawCall__Inputs {
    return new UserWithdrawCall__Inputs(this);
  }

  get outputs(): UserWithdrawCall__Outputs {
    return new UserWithdrawCall__Outputs(this);
  }
}

export class UserWithdrawCall__Inputs {
  _call: UserWithdrawCall;

  constructor(call: UserWithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UserWithdrawCall__Outputs {
  _call: UserWithdrawCall;

  constructor(call: UserWithdrawCall) {
    this._call = call;
  }
}
