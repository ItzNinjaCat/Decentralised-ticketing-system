type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BuyTicket @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  owner: Bytes! # address
  eventId: Bytes! # bytes32
  ticketTypeId: Bytes! # bytes32
  tokenId: BigInt! # uint256
  tokenURI: String! # string
  eventStartTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateEvent @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  name: String! # string
  description: String! # string
  eventStorage: String! # string
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateTicketType @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  ticketType_id: Bytes! # bytes32
  ticketType_name: String! # string
  ticketType_price: BigInt! # uint256
  ticketType_maxSupply: BigInt! # uint256
  ticketType_currentSupply: BigInt! # uint256
  ticketType_tokenURI: String! # string
  ticketType_souvenirTokenURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeleteEvent @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeleteTickeyType @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  ticketTypeId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GenerateTicket @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  receiver: Bytes! # address
  tokenId: BigInt! # uint256
  tokenURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferTicket @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateEvent @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  name: String! # string
  description: String! # string
  eventStorage: String! # string
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateTicketType @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  eventId: Bytes! # bytes32
  ticketType_id: Bytes! # bytes32
  ticketType_name: String! # string
  ticketType_price: BigInt! # uint256
  ticketType_maxSupply: BigInt! # uint256
  ticketType_currentSupply: BigInt! # uint256
  ticketType_tokenURI: String! # string
  ticketType_souvenirTokenURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  receiver: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
